{
  "stats": {
    "suites": 23,
    "tests": 43,
    "passes": 43,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 43,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2024-02-25T11:41:48.027Z",
    "end": "2024-02-25T11:43:39.410Z",
    "duration": 111383
  },
  "results": [
    {
      "uuid": "3d9b2bc1-2352-4843-8403-93b5e4d7512f",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\add-multiple-items-to-basket_improved_PO.js",
      "file": "cypress\\e2e\\automation-test-store\\add-multiple-items-to-basket_improved_PO.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "92a18184-bc9b-4e10-9b9e-85e7aac7a757",
          "title": "Add multiple items to basket",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add specific items to basket",
              "fullTitle": "Add multiple items to basket Add specific items to basket",
              "timedOut": null,
              "duration": 2662,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "haircare_PO.addHairCareProductsToBasket();",
              "err": {},
              "uuid": "2429f51b-04d2-40d8-bf34-866104584b0e",
              "parentUUID": "92a18184-bc9b-4e10-9b9e-85e7aac7a757",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2429f51b-04d2-40d8-bf34-866104584b0e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2662,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9849fb17-97d1-4734-8f07-d1828e4c8ebb",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "file": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b4418bc7-61da-4d83-b800-6e1ab5dd7ca4",
          "title": "Alias and invoke",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate total of normal and sale products",
              "fullTitle": "Alias and invoke Calculate total of normal and sale products",
              "timedOut": null,
              "duration": 2039,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\n//you can even give full lists of elements an alias, making it your reference list\ncy.get('.thumbnail').as('productThumbnails');\n//can be done better\n/* cy.get('@productThumbnails').find('.oneprice').each(($el, index, $list) => { //from the list of productThumbnails we get a list of .oneprice headers through which we iterate, .oneprice contains the price text in the web view\n    cy.log($el.text());\n}); */\ncy.get('.thumbnail').find('.oneprice').invoke('text').as('itemPrice'); //from all thumbnails, extract the price text and give the list the alias itemPrice, this also only gets item prices that are NOT on sale, as sales have a different div\ncy.get('.thumbnail').find('.pricenew').invoke('text').as('saleItemPrice'); //this one gets only items prices that are on sale\nvar itemsTotal = 0;\n//make a promise so we can iterate, on items that are not on sale\ncy.get('@itemPrice').then($linkText => {\n  var itemsPriceTotal = 0;\n  var itemPrice = $linkText.split('$'); //splits a string into an array of substrings via '$',also removes the '$' symbol\n  var i;\n  for (i = 0; i < itemPrice.length; i++) {\n    cy.log(itemPrice[i]);\n    itemsPriceTotal += Number(itemPrice[i]); //convert any string into a number - Number(str)\n  }\n  itemsTotal += itemsPriceTotal;\n  cy.log(\"Non sale price items total: \" + itemsPriceTotal);\n});\n//this is for items that are on sale\ncy.get('@saleItemPrice').then($linkText => {\n  var saleItemsPrice = 0;\n  var saleItemPrice = $linkText.split('$');\n  var i;\n  for (i = 0; i < saleItemPrice.length; i++) {\n    cy.log(saleItemPrice[i]);\n    saleItemsPrice += Number(saleItemPrice[i]); //convert any string into a number - Number(str)\n  }\n  itemsTotal += saleItemsPrice;\n  cy.log(\"Sale price items total: \" + saleItemsPrice);\n}).then(() => {\n  //after running the above cy.get, assert whether the total is correct\n  cy.log(\"The total of all products: \" + itemsTotal);\n  expect(itemsTotal).to.equal(660.5); //assert the item price is correct - via Chai \n});",
              "err": {},
              "uuid": "76178148-a47d-4095-9735-8c81839ab096",
              "parentUUID": "b4418bc7-61da-4d83-b800-6e1ab5dd7ca4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "76178148-a47d-4095-9735-8c81839ab096"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2039,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c67cf285-3ce8-40ad-aba0-db58f694905c",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\contact-us.js",
      "file": "cypress\\e2e\\automation-test-store\\contact-us.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "77b07bc6-a882-432f-b31c-e7e944022223",
          "title": "Test Contact Us Form via AutomationTestStore",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a successful submission via contact us form",
              "fullTitle": "Test Contact Us Form via AutomationTestStore Should be able to submit a successful submission via contact us form",
              "timedOut": null,
              "duration": 3257,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\n//cy.get('.info_links_footer > :nth-child(5) > a').click(); //this selector can be improved, if 5 was changed to a 4, this breaks the test\n//cy.xpath(\"//a[contains(@href, 'contact')]\").click(); \ncy.get(\"a[href$='contact']\").click().then(function (buttonName) {\n  cy.log(\"The button name is: \" + buttonName.text());\n}); //better css selector, targets 1 obj\ncy.get(\"@user\").then(user => {\n  cy.get('#ContactUsFrm_email').type(user.email);\n  cy.get('#ContactUsFrm_first_name').type(user.first_name); //all these # are unique ids, which is ideal for our selectors\n});\ncy.get('#ContactUsFrm_email').should('have.attr', 'name', 'email');\ncy.get('#ContactUsFrm_enquiry').type(\"This is my enquiry text\");\n//cy.get('.col-md-6 > .btn').click();\ncy.get(\"button[title='Submit']\").click(); //optimized css selector\n//cy.get('.mb40 > :nth-child(3)').contains(\"Your enquiry has been successfully sent to the store owner!\"); //can I improve this? Assertions lecture\ncy.get('.mb40 > :nth-child(3)').should('have.text', 'Your enquiry has been successfully sent to the store owner!');\ncy.log(\"Test has completed!\"); //remember",
              "err": {},
              "uuid": "dcffa46c-8e4b-4097-910b-1e301a7dd854",
              "parentUUID": "77b07bc6-a882-432f-b31c-e7e944022223",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcffa46c-8e4b-4097-910b-1e301a7dd854"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3257,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ab3bee74-7396-475e-ab60-a082c27e6eea",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\inspect-item.js",
      "file": "cypress\\e2e\\automation-test-store\\inspect-item.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9b7cd8c6-0982-45a5-9ce8-e2020efac7a3",
          "title": "Test Inspect Store Items using chain of commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Click on the first item using item header",
              "fullTitle": "Test Inspect Store Items using chain of commands Click on the first item using item header",
              "timedOut": null,
              "duration": 1828,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get('#block_frame_featured_1769 > .thumbnails > :nth-child(1) > .fixed_wrapper > .fixed > .prdocutname').click();",
              "err": {},
              "uuid": "8854a1a1-c176-485e-9cda-c0c4f8634717",
              "parentUUID": "9b7cd8c6-0982-45a5-9ce8-e2020efac7a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on the first item using item text",
              "fullTitle": "Test Inspect Store Items using chain of commands Click on the first item using item text",
              "timedOut": null,
              "duration": 868,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get('.prdocutname').contains('Skinsheen Bronzer Stick').click().then(function (itemHeaderText) {\n  console.log(\"Selected the following item: \" + itemHeaderText.text());\n});",
              "err": {},
              "uuid": "548f6998-3e70-4ded-a4b1-77b49d89b184",
              "parentUUID": "9b7cd8c6-0982-45a5-9ce8-e2020efac7a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on the first item using index",
              "fullTitle": "Test Inspect Store Items using chain of commands Click on the first item using index",
              "timedOut": null,
              "duration": 1024,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get('.fixed_wrapper').find('.prdocutname').eq(0).click();",
              "err": {},
              "uuid": "631ec2b8-8a86-401a-bd7e-d4095dfb158a",
              "parentUUID": "9b7cd8c6-0982-45a5-9ce8-e2020efac7a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8854a1a1-c176-485e-9cda-c0c4f8634717",
            "548f6998-3e70-4ded-a4b1-77b49d89b184",
            "631ec2b8-8a86-401a-bd7e-d4095dfb158a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3720,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "126afb5f-369a-4e61-ad6f-6ac1fb08d214",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\iterate-over-elements.js",
      "file": "cypress\\e2e\\automation-test-store\\iterate-over-elements.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "031d0a70-22c8-431a-8438-f716947c230f",
          "title": "Iterate over elements",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log information of all hair care products",
              "fullTitle": "Iterate over elements Log information of all hair care products",
              "timedOut": null,
              "duration": 1852,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// $el is a jQuery element so we can use .text() for example\ncy.get('.fixed_wrapper .prdocutname').each(($el, index, $list) => {\n  cy.log(\"index: \" + index + \" : \" + $el.text());\n});",
              "err": {},
              "uuid": "b8bd58be-6e37-4801-9fac-0e7e13e5e919",
              "parentUUID": "031d0a70-22c8-431a-8438-f716947c230f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add specific product to basket",
              "fullTitle": "Iterate over elements Add specific product to basket",
              "timedOut": null,
              "duration": 1327,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// $el is a jQuery element so we can use .text() for example\n/*cy.get('.fixed_wrapper .prdocutname').each(($el, index, $list) => {\n    if ($el.text().includes('Curls to straight Shampoo')) {\n        cy.wrap($el).click();\n        cy.get('.cart').click();\n    }\n});*/\ncy.selectProduct('Curls to straight Shampoo'); //were using a custom command with the above code",
              "err": {},
              "uuid": "17f050e5-05f1-4296-bb46-d288d87bc219",
              "parentUUID": "031d0a70-22c8-431a-8438-f716947c230f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add another specific product to basket",
              "fullTitle": "Iterate over elements Add another specific product to basket",
              "timedOut": null,
              "duration": 1263,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct('Seaweed Conditioner'); //were using a custom command with the above code",
              "err": {},
              "uuid": "d47e3650-6940-4c99-92a5-f2e15d8591f5",
              "parentUUID": "031d0a70-22c8-431a-8438-f716947c230f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add another specific product to basket",
              "fullTitle": "Iterate over elements Add another specific product to basket",
              "timedOut": null,
              "duration": 2012,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct('Seaweed Conditioner'); //were using a custom command with the above code",
              "err": {},
              "uuid": "7a3c3274-267f-4ccd-9d76-3461f248cf88",
              "parentUUID": "031d0a70-22c8-431a-8438-f716947c230f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add another specific product to basket",
              "fullTitle": "Iterate over elements Add another specific product to basket",
              "timedOut": null,
              "duration": 1477,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct('Pantene Pro-V Conditioner, Classic Care'); //were using a custom command with the above code",
              "err": {},
              "uuid": "9b31fea0-92c8-4127-a7e0-5a0b273e0ba9",
              "parentUUID": "031d0a70-22c8-431a-8438-f716947c230f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8bd58be-6e37-4801-9fac-0e7e13e5e919",
            "17f050e5-05f1-4296-bb46-d288d87bc219",
            "d47e3650-6940-4c99-92a5-f2e15d8591f5",
            "7a3c3274-267f-4ccd-9d76-3461f248cf88",
            "9b31fea0-92c8-4127-a7e0-5a0b273e0ba9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7931,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2272e5f7-183a-4d6b-bc27-3bcce2b9ef46",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\variables-and-cy-commands.js",
      "file": "cypress\\e2e\\automation-test-store\\variables-and-cy-commands.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f1fb49d6-247a-47fb-9665-2f368665177c",
          "title": "Verifying variables, cypress commands and jquery commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Navigating to specific product pages",
              "fullTitle": "Verifying variables, cypress commands and jquery commands Navigating to specific product pages",
              "timedOut": null,
              "duration": 2390,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\n/* this doesn't work due to order of execution in Cypress\nconst makeupLink = cy.get(\"a[href*='product/category&path=']\").contains(\"Makeup\");\nconst skincareLink = cy.get(\"a[href*='product/category&path=']\").contains(\"Skincare\"); \nmakeupLink.click();\nskincareLink.click();*/\n//this isn't recommended either but works\n/*\nconst makeupLink = cy.get(\"a[href*='product/category&path=']\").contains(\"Makeup\");\nmakeupLink.click();\nconst skincareLink = cy.get(\"a[href*='product/category&path=']\").contains(\"Skincare\"); \nskincareLink.click(); */\n//recommended\ncy.get(\"a[href*='product/category&path=']\").contains(\"Makeup\").click();\ncy.get(\"a[href*='product/category&path=']\").contains(\"Skincare\").click();",
              "err": {},
              "uuid": "7cc3f9e1-766d-471c-9f6c-3808bbfe9845",
              "parentUUID": "f1fb49d6-247a-47fb-9665-2f368665177c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Navigating to specific product pages",
              "fullTitle": "Verifying variables, cypress commands and jquery commands Navigating to specific product pages",
              "timedOut": null,
              "duration": 730,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"a[href*='product/category&path=']\").contains(\"Makeup\").click();\n//following code will fail\n//const header = cy.get(\"h1 .maintext\");\n//cy.log(header.text);\n//promise\ncy.get(\"h1 .maintext\").then($headerText => {\n  const headerText = $headerText.text();\n  cy.log(\"Found header text: \" + headerText);\n  expect(headerText).is.eq('Makeup');\n});",
              "err": {},
              "uuid": "23a349f6-9e1c-46c9-8f6c-d8bfabd81cf7",
              "parentUUID": "f1fb49d6-247a-47fb-9665-2f368665177c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate properties of the Contact Us page",
              "fullTitle": "Verifying variables, cypress commands and jquery commands Validate properties of the Contact Us page",
              "timedOut": null,
              "duration": 323,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/index.php?rt=content/contact\");\n//uses cypress commands and chaining\ncy.contains('#ContactUsFrm', 'Contact Us Form').find('#field_11').should('contain', 'First name:');\n//Jquery approach\ncy.contains('#ContactUsFrm', 'Contact Us Form').then(text => {\n  const firstNameText = text.find('#field_11').text();\n  expect(firstNameText).to.contain('First name:');\n  //Embedded commands (Closure)\n  cy.get('#field_11').then(fnText => {\n    cy.log(fnText.text());\n    cy.log(fnText);\n  });\n});",
              "err": {},
              "uuid": "7e0e8d4d-970d-455f-baa6-1b55e3bff90a",
              "parentUUID": "f1fb49d6-247a-47fb-9665-2f368665177c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7cc3f9e1-766d-471c-9f6c-3808bbfe9845",
            "23a349f6-9e1c-46c9-8f6c-d8bfabd81cf7",
            "7e0e8d4d-970d-455f-baa6-1b55e3bff90a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3443,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "12978203-05e6-4ce7-9353-9719eb5462d5",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\autocomplete-dropdown-list.js",
      "file": "cypress\\e2e\\webdriver-uni\\autocomplete-dropdown-list.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "383bcc92-1765-4248-b9af-3f92508761d6",
          "title": "Verify autocomplete dropdown lists via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select Avacado & Grapes product via autocomplete list",
              "fullTitle": "Verify autocomplete dropdown lists via webdriveruni Select Avacado & Grapes product via autocomplete list",
              "timedOut": null,
              "duration": 2729,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#autocomplete-textfield').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#myInput').type('A');\n//get all elements tied to the list and iterate through each one\ncy.get('#myInputautocomplete-list > *').each(($el, index, $list) => {\n  const prod = $el.text();\n  const productToSelect = 'Avacado';\n  if (prod === productToSelect) {\n    //$el.click(); //deprecated\n    $el.trigger(\"click\");\n    cy.get('#submit-button').click();\n    cy.url().should('include', productToSelect);\n  }\n}).then(() => {\n  //execute the then block if the previous block is successful\n  cy.get('#myInput').type('G');\n  //get all elements tied to the list and iterate through each one\n  cy.get('#myInputautocomplete-list > *').each(($el, index, $list) => {\n    const prod = $el.text();\n    const productToSelect = 'Grapes';\n    if (prod === productToSelect) {\n      //$el.click(); //deprecated\n      $el.trigger(\"click\");\n      cy.get('#submit-button').click();\n      cy.url().should('include', productToSelect);\n    }\n  });\n});",
              "err": {},
              "uuid": "7239d54f-c830-424f-b03c-2d0a1014580e",
              "parentUUID": "383bcc92-1765-4248-b9af-3f92508761d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7239d54f-c830-424f-b03c-2d0a1014580e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2729,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c155cfe7-3504-44ae-b325-894a2affdaac",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\browser-navigation.js",
      "file": "cypress\\e2e\\webdriver-uni\\browser-navigation.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "96dcf9ac-62e1-477d-8f92-fa5ed756ac9c",
          "title": "Validate webdriveruni homepage links",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Confirm links redirect to the correct pages",
              "fullTitle": "Validate webdriveruni homepage links Confirm links redirect to the correct pages",
              "timedOut": null,
              "duration": 3819,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//new navigation without opening a new tab or having to go directly to the link\ncy.visit('http://www.webdriveruniversity.com/');\n//click the 'CONTACT US' button\ncy.get('#contact-us').invoke('removeAttr', 'target').click();\ncy.url().should('include', 'contactus');\ncy.go('back'); //web browser back\ncy.reload(); //refresh the current view\ncy.url().should('include', 'http://www.webdriveruniversity.com/');\n//cy.reload(true); //reload the page without using cache\ncy.go('forward');\ncy.url().should('include', 'contactus');\ncy.go('back');\ncy.get('#login-portal').invoke('removeAttr', 'target').click();\ncy.url().should('include', 'Login-Portal');\ncy.go('back');\ncy.get('#to-do-list').invoke('removeAttr', 'target').click();\ncy.url().should('include', 'To-Do-List');\ncy.go('back');",
              "err": {},
              "uuid": "e648c93a-0130-485a-8315-69d31d542ec8",
              "parentUUID": "96dcf9ac-62e1-477d-8f92-fa5ed756ac9c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e648c93a-0130-485a-8315-69d31d542ec8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3819,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0e36235e-3daa-442b-9b8f-685618ab9304",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\checkboxes-improved.js",
      "file": "cypress\\e2e\\webdriver-uni\\checkboxes-improved.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1796dfa5-dbae-47b3-8537-5c8b2d6c449d",
          "title": "Verify checkboxes via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Check and validate checkbox",
              "timedOut": null,
              "duration": 744,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#checkboxes > :nth-child(1) > input').as('option-1');\ncy.get('@option-1').check().should('be.checked');\ncy.get(':nth-child(5) > input').as('option-5');\ncy.get('@option-5').uncheck().should('not.be.checked');",
              "err": {},
              "uuid": "73f576e2-3c5d-4393-96c7-9cb5eec6445a",
              "parentUUID": "1796dfa5-dbae-47b3-8537-5c8b2d6c449d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Uncheck and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Uncheck and validate checkbox",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(':nth-child(5) > input').as('option-5');\ncy.get('@option-5').uncheck().should('not.be.checked');",
              "err": {},
              "uuid": "b157abfc-fa21-46fd-b175-ab0b1e3ac8c0",
              "parentUUID": "1796dfa5-dbae-47b3-8537-5c8b2d6c449d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check multiple checkboxes",
              "fullTitle": "Verify checkboxes via webdriveruni Check multiple checkboxes",
              "timedOut": null,
              "duration": 404,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"input[type='checkbox']\").check([\"option-1\", \"option-2\", \"option-3\", \"option-4\"]).should('be.checked');",
              "err": {},
              "uuid": "4980ac12-c105-4c45-b190-82905573ab37",
              "parentUUID": "1796dfa5-dbae-47b3-8537-5c8b2d6c449d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73f576e2-3c5d-4393-96c7-9cb5eec6445a",
            "b157abfc-fa21-46fd-b175-ab0b1e3ac8c0",
            "4980ac12-c105-4c45-b190-82905573ab37"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1403,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b23a4c35-f2da-4708-b76e-bda39a9f1bbd",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\checkboxes.js",
      "file": "cypress\\e2e\\webdriver-uni\\checkboxes.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1daa2f2a-1ec5-4370-ba1b-a6f965b6ecba",
          "title": "Verify checkboxes via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Check and validate checkbox",
              "timedOut": null,
              "duration": 1004,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.get('#checkboxes > :nth-child(1) > input').check()\n//cy.get('#checkboxes > :nth-child(1) > input').check().should('not.be.checked')\ncy.get('#checkboxes > :nth-child(1) > input').as('option-1');\n//cy.get('@option-1').check()\ncy.get('@option-1').check().should('be.checked');\ncy.get(':nth-child(5) > input').as('option-5');\ncy.get('@option-5').uncheck().should('not.be.checked');",
              "err": {},
              "uuid": "0d09b7b2-7abd-449f-984f-159c3f97ded1",
              "parentUUID": "1daa2f2a-1ec5-4370-ba1b-a6f965b6ecba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Uncheck and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Uncheck and validate checkbox",
              "timedOut": null,
              "duration": 331,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(':nth-child(5) > input').as('option-5');\ncy.get('@option-5').uncheck().should('not.be.checked');",
              "err": {},
              "uuid": "ff0d2a42-8344-4057-be4b-e36f5af066bf",
              "parentUUID": "1daa2f2a-1ec5-4370-ba1b-a6f965b6ecba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check multiple checkboxes",
              "fullTitle": "Verify checkboxes via webdriveruni Check multiple checkboxes",
              "timedOut": null,
              "duration": 486,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"input[type='checkbox']\").check([\"option-1\", \"option-2\", \"option-3\", \"option-4\"]).should('be.checked');",
              "err": {},
              "uuid": "60709e05-d1aa-4728-bcd3-51051144c444",
              "parentUUID": "1daa2f2a-1ec5-4370-ba1b-a6f965b6ecba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0d09b7b2-7abd-449f-984f-159c3f97ded1",
            "ff0d2a42-8344-4057-be4b-e36f5af066bf",
            "60709e05-d1aa-4728-bcd3-51051144c444"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1821,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "231c102b-dc05-4177-92f7-2111ac062785",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\contact-us-improved.js",
      "file": "cypress\\e2e\\webdriver-uni\\contact-us-improved.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ebf68797-9364-4852-838f-a22261ed175b",
          "title": "Test Contact Us Form via WebdriverUni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a successful submission via contact us form",
              "fullTitle": "Test Contact Us Form via WebdriverUni Should be able to submit a successful submission via contact us form",
              "timedOut": null,
              "duration": 2057,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.document().should('have.property', 'charset').and('eq', 'UTF-8');\ncy.title().should('include', 'WebDriver | Contact Us');\ncy.url().should('include', 'contactus');\ncy.webDriverUni_ContactForm_Submission(Cypress.env(\"first_name\"), data.last_name, data.email, \"John's comment here\", 'h1', \"Thank You for your Message!\");",
              "err": {},
              "uuid": "269a5043-80dc-4077-9157-2a4c2e566e84",
              "parentUUID": "ebf68797-9364-4852-838f-a22261ed175b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to submit a successful submission via contact us form as all fields are required",
              "fullTitle": "Test Contact Us Form via WebdriverUni Should not be able to submit a successful submission via contact us form as all fields are required",
              "timedOut": null,
              "duration": 1138,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.webDriverUni_ContactForm_Submission(data.first_name, data.last_name, \" \", \"John's comment here\", 'body', 'Error: Invalid email address');",
              "err": {},
              "uuid": "e13665b7-1469-48a1-a644-abf5251d81ea",
              "parentUUID": "ebf68797-9364-4852-838f-a22261ed175b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "269a5043-80dc-4077-9157-2a4c2e566e84",
            "e13665b7-1469-48a1-a644-abf5251d81ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3195,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "59a34b5b-2bf7-4c4b-b98d-366d04b39e12",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\contact-us-improved_PO.js",
      "file": "cypress\\e2e\\webdriver-uni\\contact-us-improved_PO.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "450388b8-8949-438d-9cd8-cf6534340f88",
          "title": "Test Contact Us Form via WebdriverUni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a successful submission via contact us form",
              "fullTitle": "Test Contact Us Form via WebdriverUni Should be able to submit a successful submission via contact us form",
              "timedOut": null,
              "duration": 5830,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.document().should('have.property', 'charset').and('eq', 'UTF-8');\ncy.title().should('include', 'WebDriver | Contact Us');\ncy.url().should('include', 'contactus');\ncontact_us_PO.contactForm_Submission(Cypress.env(\"first_name\"), data.last_name, data.email, \"John's comment here\", 'h1', \"Thank You for your Message!\");",
              "err": {},
              "uuid": "ecefa1ca-8d30-45dd-8812-df51eadf5729",
              "parentUUID": "450388b8-8949-438d-9cd8-cf6534340f88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to submit a successful submission via contact us form as all fields are required",
              "fullTitle": "Test Contact Us Form via WebdriverUni Should not be able to submit a successful submission via contact us form as all fields are required",
              "timedOut": null,
              "duration": 4777,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contact_us_PO.contactForm_Submission(data.first_name, data.last_name, \" \", \"John's comment here\", 'body', 'Error: Invalid email address');",
              "err": {},
              "uuid": "4274c5ad-579f-4c2e-98ec-8095a791120d",
              "parentUUID": "450388b8-8949-438d-9cd8-cf6534340f88",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ecefa1ca-8d30-45dd-8812-df51eadf5729",
            "4274c5ad-579f-4c2e-98ec-8095a791120d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10607,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "09518e80-2f17-4707-a8e6-8c64f91a77ee",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\contact-us.js",
      "file": "cypress\\e2e\\webdriver-uni\\contact-us.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e9d2ea79-863d-4bd0-b452-f6010cb12735",
          "title": "Test Contact Us Form via WebdriverUni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a successful submission via contact us form",
              "fullTitle": "Test Contact Us Form via WebdriverUni Should be able to submit a successful submission via contact us form",
              "timedOut": null,
              "duration": 2499,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cypress code\n//cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\");\n//new navigation without opening a new tab or having to go directly to the link\n//cy.visit('https://www.webdriveruniversity.com/');\n//click the 'CONTACT US' button\n//cy.get('#contact-us').invoke('removeAttr', 'target').click();//target=\"_blank\" attribute in the button forces a new tab to be opened and this gives us troubles, so we remove it via a jQuery command - removeAttr\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8'); //we get the document window, HTML doc, and assert that it has the charset property, of value, and+eq, UTF-8\ncy.title().should('include', 'WebDriver | Contact Us'); //get the title property directly via the .title command, and assert that it includes the text value\ncy.url().should('include', 'contactus'); //get the current URL and verify that it contains 'contactus', may be good when we check/assert final pages in a flow\n//cy.get('#contact-us > .thumbnail').click({force: true}); //flaky\n/*cy.get('[name=\"first_name\"]').type(data.first_name); //add the first name in the field\ncy.get('[name=\"last_name\"]').type(data.last_name); //add the last name in the field\n  cy.get('[name=\"email\"]').type(data.email); //add the e-mail in the field\n  cy.get('textarea.feedback-input').type(\"John's comment here\"); //add a comment in the field field\n  cy.get('[type=\"submit\"]').click(); //click the submit button\n  //cy.get('#contact_reply').contains(\"Thank You for your Message!\");//check that the transition did occur and the confirmation message/page is displayed\ncy.get('h1').should('have.text', \"Thank You for your Message!\"); //better assertion check*/\n//replaced the above with a custom command\ncy.webDriverUni_ContactForm_Submission(data.first_name, data.last_name, data.email, \"John's comment here\", 'h1', \"Thank You for your Message!\");",
              "err": {},
              "uuid": "007ac183-f840-4961-84ca-f77102d1571d",
              "parentUUID": "e9d2ea79-863d-4bd0-b452-f6010cb12735",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to submit a successful submission via contact us form as all fields are required",
              "fullTitle": "Test Contact Us Form via WebdriverUni Should not be able to submit a successful submission via contact us form as all fields are required",
              "timedOut": null,
              "duration": 1474,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//it.only(\"Should not be able to submit a successful submission via contact us form as all fields are required\", () => { //the .only property makes it so that only this test is ran\n//cypress code\n//cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\");\n//new navigation without opening a new tab or having to go directly to the link\ncy.visit('https://www.webdriveruniversity.com/');\n//click the 'CONTACT US' button\ncy.get('#contact-us').invoke('removeAttr', 'target').click(); //target=\"_blank\" attribute in the button forces a new tab to be opened and this gives us troubles, so we remove it via a jQuery command - removeAttr\n/*cy.get('[name=\"first_name\"]').type(data.first_name); //add the first name in the field\ncy.get('[name=\"last_name\"]').type(data.last_name); //add the last name in the field\ncy.get('textarea.feedback-input').type(\"John's comment here\"); //add a comment in the field field\ncy.get('[type=\"submit\"]').click(); //click the submit button\n//cy.get('body').contains(\"Error: all fields are required\");\n//cy.get('body').should('have.text', \"\\n\\n\\n Error: all fields are required\\n Error: Invalid email address\\n\\n\\n\"); //chai assertion\ncy.get('body').contains('Error: all fields are required');\ncy.get('body').contains('Error: Invalid email address');*/\n//replaced the above with a custom command\ncy.webDriverUni_ContactForm_Submission(data.first_name, data.last_name, \" \", \"John's comment here\", 'body', 'Error: Invalid email address');",
              "err": {},
              "uuid": "eaf25bdd-7381-4ddb-be62-3aacd0672361",
              "parentUUID": "e9d2ea79-863d-4bd0-b452-f6010cb12735",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "007ac183-f840-4961-84ca-f77102d1571d",
            "eaf25bdd-7381-4ddb-be62-3aacd0672361"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3973,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7dc5eb31-ec2d-40f6-bd5b-62997606b305",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\data-tables.js",
      "file": "cypress\\e2e\\webdriver-uni\\data-tables.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "77cb20fe-c3e8-45b9-b8fb-dc16fd4aac64",
          "title": "Handling data via WebDriverUni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate and assert the total age of all users",
              "fullTitle": "Handling data via WebDriverUni Calculate and assert the total age of all users",
              "timedOut": null,
              "duration": 1552,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var userDetails = [];\nlet numb = 0;\ncy.get('#thumbnail-1 td').each(($el, index, $list) => {\n  //Iterate through an array like structure (arrays or objects with a length property).\n  userDetails[index] = $el.text();\n}).then(() => {\n  var i;\n  for (i = 0; i < userDetails.length; i++) {\n    if (Number(userDetails[i])) {\n      numb += Number(userDetails[i]); //only if it is a number, will it be added\n    }\n  }\n  cy.log(\"Found total age: \" + numb);\n  expect(numb).to.eq(322);\n});",
              "err": {},
              "uuid": "1260212f-982f-4a1f-ba52-abe1d3c2017b",
              "parentUUID": "77cb20fe-c3e8-45b9-b8fb-dc16fd4aac64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Calculate and assert the age of a given user based on last name",
              "fullTitle": "Handling data via WebDriverUni Calculate and assert the age of a given user based on last name",
              "timedOut": null,
              "duration": 258,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#thumbnail-1 tr td:nth-child(2)').each(($el, index, $list) => {\n  const lastName = $el.text();\n  if (lastName.includes(\"Woods\")) {\n    cy.get('#thumbnail-1 tr td:nth-child(2)').eq(index).next().then(function (age) {\n      //went to the next element in the table row, which is the age element, and we extracted the age text\n      const userAge = age.text();\n      expect(userAge).to.eq(\"80\");\n    });\n  }\n});",
              "err": {},
              "uuid": "7a3a715a-b10b-4818-9b3c-9d685853fff4",
              "parentUUID": "77cb20fe-c3e8-45b9-b8fb-dc16fd4aac64",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1260212f-982f-4a1f-ba52-abe1d3c2017b",
            "7a3a715a-b10b-4818-9b3c-9d685853fff4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1810,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e088e184-9e3b-403f-8f4b-7771d00c9244",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\datepicker.js",
      "file": "cypress\\e2e\\webdriver-uni\\datepicker.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "60a64d37-1950-421d-8581-bc09da795569",
          "title": "Test datepicker via Webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select date from the date picker",
              "fullTitle": "Test datepicker via Webdriveruni Select date from the date picker",
              "timedOut": null,
              "duration": 3069,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#datepicker').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#datepicker').click();\n/*let date = new Date();\ncy.log(date.getDate()) //get current day i.e. 22\n  let date2 = new Date();\ncy.log(date2.getDate() + 5) //current day + 5*/\nvar date = new Date();\ndate.setDate(date.getDate() + 365);\nvar futureYear = date.getFullYear();\nvar futureMonth = date.toLocaleDateString(\"default\", {\n  month: \"long\"\n});\nvar futureDay = date.getDate();\ncy.log(\"Future year to select: \" + futureYear);\ncy.log(\"Future month to selector: \" + futureMonth);\ncy.log(\"Future day to selecto: \" + futureDay);\nfunction selectMonthAndYear() {\n  cy.get('.datepicker-dropdown').find('.datepicker-switch').first().then(currentDate => {\n    if (!currentDate.text().includes(futureYear)) {\n      cy.get('.next').first().click();\n      selectMonthAndYear();\n    }\n  }).then(() => {\n    cy.get('.datepicker-dropdown').find('.datepicker-switch').first().then(currentDate => {\n      if (!currentDate.text().includes(futureMonth)) {\n        cy.get('.next').first().click();\n        selectMonthAndYear();\n      }\n    });\n  });\n}\nfunction selectFutureDay() {\n  cy.get('[class=\"day\"]').contains(futureDay).click(); //search all the elements returned via the selector, and click the one that has it\n}\nselectMonthAndYear();\nselectFutureDay();",
              "err": {},
              "uuid": "acf39120-6a9d-4d36-a248-65313c166f65",
              "parentUUID": "60a64d37-1950-421d-8581-bc09da795569",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "acf39120-6a9d-4d36-a248-65313c166f65"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3069,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fb6b3ae6-0fff-4d0f-91c0-04960547c4e1",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\file-upload.js",
      "file": "cypress\\e2e\\webdriver-uni\\file-upload.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b027adea-cd3b-4b11-b591-415062eb7bde",
          "title": "Test file upload via webdriver uni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Upload a file",
              "fullTitle": "Test file upload via webdriver uni Upload a file",
              "timedOut": null,
              "duration": 1019,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#myFile\").selectFile(\"cypress/fixtures/laptop.png\");\ncy.get(\"#submit-button\").click();\n//add alert box assertion",
              "err": {},
              "uuid": "f7a023c0-5c05-4fb8-9a2a-79afb554f0ff",
              "parentUUID": "b027adea-cd3b-4b11-b591-415062eb7bde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Upload no file",
              "fullTitle": "Test file upload via webdriver uni Upload no file",
              "timedOut": null,
              "duration": 329,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#submit-button\").click();\n//add alert box assertion",
              "err": {},
              "uuid": "63aa8c31-72dd-45a0-8654-db50fe700ce7",
              "parentUUID": "b027adea-cd3b-4b11-b591-415062eb7bde",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7a023c0-5c05-4fb8-9a2a-79afb554f0ff",
            "63aa8c31-72dd-45a0-8654-db50fe700ce7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1348,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "357ea100-67e0-4a71-8d28-03f23de87f3b",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\iframe.js",
      "file": "cypress\\e2e\\webdriver-uni\\iframe.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7e613e4c-5ca9-4e6f-8054-f9b1943039c5",
          "title": "Handling IFrame & Modals",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Handle webdriveruni iframe and modal",
              "fullTitle": "Handling IFrame & Modals Handle webdriveruni iframe and modal",
              "timedOut": null,
              "duration": 1377,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"/\");\ncy.get('#iframe').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#frame').then($iframe => {\n  const body = $iframe.contents().find('body');\n  cy.wrap(body).as('iframe');\n});\ncy.get('@iframe').find('#button-find-out-more').click();\ncy.get('@iframe').find('#myModal').as('modal'); //giving it an alias to run cypress commands on it\ncy.get('@modal').should($expectedText => {\n  //grabbed our modal\n  const text = $expectedText.text(); //grabbed our modal text\n  expect(text).to.include('Welcome to webdriveruniversity.com we sell a wide range of electrical good');\n});\ncy.get('@modal').contains('Close').click(); //get our modal, and if it contains the text Close, click",
              "err": {},
              "uuid": "525a72bc-471d-4861-84dc-2b0a459f16d4",
              "parentUUID": "7e613e4c-5ca9-4e6f-8054-f9b1943039c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "525a72bc-471d-4861-84dc-2b0a459f16d4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1377,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b6f38bc9-9fe1-412e-91cb-ce17716da9e4",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\js-alerts.js",
      "file": "cypress\\e2e\\webdriver-uni\\js-alerts.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "612120d4-877e-4f37-a8f6-f26816475ae1",
          "title": "Handle js alerts",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate js confirm alert box using a stub",
              "fullTitle": "Handle js alerts Validate js confirm alert box using a stub",
              "timedOut": null,
              "duration": 1010,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://www.webdriveruniversity.com/');\n//click the 'CONTACT US' button\ncy.get('#popup-alerts').invoke('removeAttr', 'target').click(); //target=\"_blank\" attribute in the button forces a new tab to be opened and this gives us troubles, so we remove it via a jQuery command - removeAttr\nconst stub = cy.stub();\ncy.on('window:confirm', stub);\ncy.get('#button4').click().then(() => {\n  expect(stub.getCall(0)).to.be.calledWith('Press a button!');\n}).then(() => {\n  return true;\n}).then(() => {\n  cy.get('#confirm-alert-text').contains('You pressed OK!');\n});",
              "err": {},
              "uuid": "4fe8cf2e-5406-426f-b0ae-3eb79c29893a",
              "parentUUID": "612120d4-877e-4f37-a8f6-f26816475ae1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4fe8cf2e-5406-426f-b0ae-3eb79c29893a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1010,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "df21e8c7-9b86-405d-8510-3cd9820b84a8",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\mouse-actions.js",
      "file": "cypress\\e2e\\webdriver-uni\\mouse-actions.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e2748d14-6b80-4a39-ae94-97e847a5409e",
          "title": "Test mouse actions webdriveruniversity",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Scroll element into view",
              "fullTitle": "Test mouse actions webdriveruniversity Scroll element into view",
              "timedOut": null,
              "duration": 928,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#actions').scrollIntoView().invoke('removeAttr', 'target').click({\n  force: true\n});",
              "err": {},
              "uuid": "62364556-96f6-4587-9882-514c7ee780cd",
              "parentUUID": "e2748d14-6b80-4a39-ae94-97e847a5409e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I should be able to drag and drop a draggable item",
              "fullTitle": "Test mouse actions webdriveruniversity I should be able to drag and drop a draggable item",
              "timedOut": null,
              "duration": 301,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#actions').scrollIntoView().invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#draggable').trigger('mousedown', {\n  which: 1\n}); //trigger() -> Trigger an event on a DOM element. e.g. mouse button presses\ncy.get('#droppable').trigger('mousemove').trigger('mouseup', {\n  force: true\n}); //force action skipping waiting for actionability",
              "err": {},
              "uuid": "a5526e36-59ec-4944-85d7-fd3cf5dd482f",
              "parentUUID": "e2748d14-6b80-4a39-ae94-97e847a5409e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I should be able to perform a double mouse click",
              "fullTitle": "Test mouse actions webdriveruniversity I should be able to perform a double mouse click",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#actions').scrollIntoView().invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#double-click').dblclick();",
              "err": {},
              "uuid": "0931f183-a89f-417b-9751-b1085a972e24",
              "parentUUID": "e2748d14-6b80-4a39-ae94-97e847a5409e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I should be able to hold down the left mouse click button on a given item",
              "fullTitle": "Test mouse actions webdriveruniversity I should be able to hold down the left mouse click button on a given item",
              "timedOut": null,
              "duration": 286,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#actions').scrollIntoView().invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#click-box').trigger('mousedown', {\n  which: 1\n}).then($element => {\n  expect($element).to.have.css('background-color', 'rgb(0, 255, 0)'); //background-color css attribute check\n});",
              "err": {},
              "uuid": "e7cd1141-b368-4161-829f-80aa04a37ead",
              "parentUUID": "e2748d14-6b80-4a39-ae94-97e847a5409e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62364556-96f6-4587-9882-514c7ee780cd",
            "a5526e36-59ec-4944-85d7-fd3cf5dd482f",
            "0931f183-a89f-417b-9751-b1085a972e24",
            "e7cd1141-b368-4161-829f-80aa04a37ead"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1845,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4ff01d5b-8ea3-46bc-bdbb-534642e6e84e",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\radio-buttons.js",
      "file": "cypress\\e2e\\webdriver-uni\\radio-buttons.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "16314037-b255-4fdd-b252-8177f2d92e49",
          "title": "Verify radio buttons via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate the states of specific radio buttons",
              "fullTitle": "Verify radio buttons via webdriveruni Validate the states of specific radio buttons",
              "timedOut": null,
              "duration": 1067,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"[value='lettuce']\").should('not.be.checked');\ncy.get(\"[value='pumpkin']\").should('be.checked');\ncy.get(\"[value='lettuce']\").check().should('be.checked');\ncy.get(\"[value='pumpkin']\").should('not.be.checked');\ncy.get(\"[value='cabbage']\").should('be.disabled');",
              "err": {},
              "uuid": "71ded29b-11db-40a3-9833-2053ceecfd69",
              "parentUUID": "16314037-b255-4fdd-b252-8177f2d92e49",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71ded29b-11db-40a3-9833-2053ceecfd69"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1067,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "18311c94-2305-4543-95cf-7d76bb0e6ac3",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\select-dropdown-list.js",
      "file": "cypress\\e2e\\webdriver-uni\\select-dropdown-list.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dd1cccef-fae9-40c7-afd1-a38b3535d9d5",
          "title": "Interact with dropdown lists via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select specific values via select dropdown lists",
              "fullTitle": "Interact with dropdown lists via webdriveruni Select specific values via select dropdown lists",
              "timedOut": null,
              "duration": 1674,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#dropdown-checkboxes-radiobuttons').invoke('removeAttr', 'target').click({\n  force: true\n});\n//selection based on attribute values\ncy.get('#dropdowm-menu-1').select('c#'); //simply passing the list value (this is from the attribute 'value' inside the element)\ncy.get('#dropdowm-menu-2').select('testng').should('have.value', 'testng'); //value assertion\n//selection based on text value\ncy.get('#dropdowm-menu-3').select('JQuery').contains('JQuery'); //text assertion\ncy.get('#dropdowm-menu-2').select('maven').should('have.value', 'maven');\ncy.get('#dropdowm-menu-2').select('TestNG').contains('TestNG'); //btw this guy doesn't know how to write 'down' reason why my test failed because I was writing it correctly as 'down'",
              "err": {},
              "uuid": "ad5f5b60-e8aa-48e6-82f7-16e5b384e7aa",
              "parentUUID": "dd1cccef-fae9-40c7-afd1-a38b3535d9d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad5f5b60-e8aa-48e6-82f7-16e5b384e7aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1674,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "714cbe28-790a-4045-9537-53d12fecdb13",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\traversing-elements.js",
      "file": "cypress\\e2e\\webdriver-uni\\traversing-elements.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f406ec9-1b29-4c15-96df-b93ee5be88fa",
          "title": "Traversing DOM elements in Cypress",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "siblings() To get all sibling DOM elements of elements",
              "fullTitle": "Traversing DOM elements in Cypress siblings() To get all sibling DOM elements of elements",
              "timedOut": null,
              "duration": 1199,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-button-other-states .active').siblings().should('have.length', '3');",
              "err": {},
              "uuid": "34a1e7bc-8b8f-4a3d-8a42-8e3181a6f45d",
              "parentUUID": "9f406ec9-1b29-4c15-96df-b93ee5be88fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34a1e7bc-8b8f-4a3d-8a42-8e3181a6f45d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1199,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f71dea83-d5f6-4e11-aa2e-073789a6cbe0",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\add-multiple-items-to-basket.js",
      "file": "cypress\\e2e\\automation-test-store\\add-multiple-items-to-basket.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "052399f7-fadc-4319-91f9-156209adc460",
          "title": "Add multiple items to basket",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add specific items to basket",
              "fullTitle": "Add multiple items to basket Add specific items to basket",
              "timedOut": null,
              "duration": 2951,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "globalThis.data.productName.forEach(function (element) {\n  cy.addProductToBasket(element);\n});\ncy.get('.block_7 > .nav > .dropdown > .dropdown-toggle').click();",
              "err": {},
              "uuid": "1668c352-6962-493d-b65e-10d74b2240ed",
              "parentUUID": "052399f7-fadc-4319-91f9-156209adc460",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1668c352-6962-493d-b65e-10d74b2240ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2951,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}